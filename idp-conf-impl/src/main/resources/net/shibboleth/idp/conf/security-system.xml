<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

       default-init-method="initialize"
       default-destroy-method="destroy">

    <bean id="shibboleth.DefaultIdentifierGenerationStrategy"
        class="net.shibboleth.utilities.java.support.security.impl.SecureRandomIdentifierGenerationStrategy" />

    <!-- Credential factory beans, mostly for relying-party service. -->

    <bean id="shibboleth.BasicX509CredentialFactoryBean" abstract="true"
        class="net.shibboleth.idp.profile.spring.factory.BasicX509CredentialFactoryBean" />
        
    <bean id="shibboleth.X509InlineCredentialFactoryBean" abstract="true"
        class="net.shibboleth.idp.profile.spring.factory.X509InlineCredentialFactoryBean" />
        
    <bean id="shibboleth.BasicResourceCredentialFactoryBean" abstract="true"
        class="net.shibboleth.idp.profile.spring.factory.BasicResourceCredentialFactoryBean" />
        
    <bean id="shibboleth.BasicInlineCredentialFactoryBean" abstract="true"
        class="net.shibboleth.idp.profile.spring.factory.BasicInlineCredentialFactoryBean" />

    <!-- Principally used in relying-party.xml to define new security configurations. -->

    <bean id="shibboleth.BasicSignatureValidationConfiguration" abstract="true"
        class="org.opensaml.xmlsec.impl.BasicSignatureValidationConfiguration"
        p:includedAlgorithms="#{getObject('shibboleth.IncludedSignatureAlgorithms') ?: getObject('shibboleth.SignatureWhitelist')}"
        p:excludedAlgorithms="#{getObject('shibboleth.ExcludedSignatureAlgorithms') ?: getObject('shibboleth.SignatureBlacklist')}" />
    
    <bean id="shibboleth.BasicClientTLSValidationConfiguration" abstract="true"
        class="org.opensaml.security.x509.tls.impl.BasicClientTLSValidationConfiguration" />
    
    <bean id="shibboleth.BasicHttpClientSecurityConfiguration" abstract="true"
        class="org.opensaml.security.httpclient.impl.BasicHttpClientSecurityConfiguration" />
    
    <bean id="shibboleth.BasicSignatureSigningConfiguration" abstract="true"
        class="org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration"
        p:includedAlgorithms="#{getObject('shibboleth.IncludedSignatureAlgorithms') ?: getObject('shibboleth.SignatureWhitelist')}"
        p:excludedAlgorithms="#{getObject('shibboleth.ExcludedSignatureAlgorithms') ?: getObject('shibboleth.SignatureBlacklist')}" />
    
    <bean id="shibboleth.BasicEncryptionConfiguration" abstract="true"
        class="org.opensaml.xmlsec.impl.BasicEncryptionConfiguration"
        p:includedAlgorithms="#{getObject('shibboleth.IncludedEncryptionAlgorithms') ?: getObject('shibboleth.EncryptionWhitelist')}"
        p:excludedAlgorithms="#{getObject('shibboleth.ExcludedEncryptionAlgorithms') ?: getObject('shibboleth.EncryptionBlacklist')}" />

    <bean id="shibboleth.BasicDecryptionConfiguration" abstract="true"
        class="org.opensaml.xmlsec.impl.BasicDecryptionConfiguration"
        p:includedAlgorithms="#{getObject('shibboleth.IncludedEncryptionAlgorithms') ?: getObject('shibboleth.EncryptionWhitelist')}"
        p:excludedAlgorithms="#{getObject('shibboleth.ExcludedEncryptionAlgorithms') ?: getObject('shibboleth.EncryptionBlacklist')}" />

    <!-- Lookup functions to locate security configurations on profile beans. -->

    <bean id="shibboleth.SignatureValidationConfigurationLookup" lazy-init="true"
        class="net.shibboleth.idp.profile.config.navigate.SignatureValidationConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.SignatureSigningConfigurationLookup" lazy-init="true"
        class="net.shibboleth.idp.profile.config.navigate.SignatureSigningConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.DecryptionConfigurationLookup" lazy-init="true"
        class="net.shibboleth.idp.profile.config.navigate.DecryptionConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.EncryptionConfigurationLookup" lazy-init="true"
        class="net.shibboleth.idp.profile.config.navigate.EncryptionConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.ClientTLSValidationConfigurationLookup" lazy-init="true"
        class="net.shibboleth.idp.profile.config.navigate.ClientTLSValidationConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.SelfEncryptionConfigurationLookup" lazy-init="true"
        class="net.shibboleth.idp.profile.config.navigate.SelfEncryptionConfigurationLookupFunction"
        p:selfConfiguration="#{getObject('shibboleth.SelfEncryptionConfiguration')}"
        p:includeProfileDefaultConfiguration="%{idp.encryption.self.includeProfileDefaultConfiguration:false}"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />

    <!-- Beans that implement the mashing of security configurations into final parameter sets. -->
    
    <bean id="shibboleth.SignatureValidationParametersResolver"
        class="org.opensaml.xmlsec.impl.BasicSignatureValidationParametersResolver" />
    <bean id="shibboleth.SignatureSigningParametersResolver"
        class="org.opensaml.saml.security.impl.SAMLMetadataSignatureSigningParametersResolver" />
    <bean id="shibboleth.DecryptionParametersResolver"
        class="org.opensaml.xmlsec.impl.BasicDecryptionParametersResolver" />
    <bean id="shibboleth.EncryptionParametersResolver"
        class="org.opensaml.saml.security.impl.SAMLMetadataEncryptionParametersResolver"
        c:resolver-ref="shibboleth.MetadataCredentialResolver"
        p:defaultKeyAgreementUseKeyWrap="%{idp.encryption.keyagreement.metadata.defaultUseKeyWrap:Default}" />
    <bean id="shibboleth.ClientTLSValidationParametersResolver"
        class="org.opensaml.security.x509.tls.impl.BasicClientTLSValidationParametersResolver" />
    <bean id="shibboleth.HttpClientSecurityParametersResolver"
        class="org.opensaml.security.httpclient.impl.BasicHttpClientSecurityParametersResolver" />

    <!--
    The beans below are primarily used by trust engines in relying-party-system.xml, but also in the
    resolver for encryption parameters above.
    -->

    <bean id="shibboleth.MetadataCredentialResolver"
        class="org.opensaml.saml.security.impl.MetadataCredentialResolver"
         p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
         p:keyInfoCredentialResolver-ref="shibboleth.KeyInfoCredentialResolver">
    </bean>

    <bean id="shibboleth.KeyInfoCredentialResolver"
        class="org.opensaml.xmlsec.config.impl.DefaultSecurityConfigurationBootstrap"
        factory-method="buildBasicInlineKeyInfoCredentialResolver" />

 </beans>
