<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <!-- Low-level helpers. -->

    <bean id="shibboleth.Pair" class="net.shibboleth.shared.collection.Pair" abstract="true" />
    
    <bean id="shibboleth.CommaDelimStringArray"
        class="org.springframework.util.StringUtils" factory-method="commaDelimitedListToStringArray" abstract="true" />
            
    <!-- Parent bean for indirecting a lookup into a managed/reloadable bean. -->
    
    <bean id="shibboleth.ManagedBean" abstract="true"
        class="net.shibboleth.shared.service.reloadable.ProxiedFactoryBean"
        c:service-ref="shibboleth.ManagedBeanService" />

    <!-- List combiner factory bean. -->

    <bean id="shibboleth.ListCombiner" abstract="true"
        class="net.shibboleth.shared.spring.factory.CombiningListFactoryBean" />

    <!-- Resource beans. -->    

    <bean id="shibboleth.ConditionalReesource" abstract="true"
        class="net.shibboleth.shared.spring.resource.ConditionalResource" />

    <bean id="shibboleth.RunnableFileSystemResource" abstract="true"
        class="net.shibboleth.shared.spring.resource.RunnableFileSystemResource" />

    <!-- TrustEngine helpers. -->
        
    <bean id="shibboleth.StaticExplicitTrustEngine" abstract="true"
        class="org.opensaml.spring.trust.StaticExplicitKeyFactoryBean" />
    
    <bean id="shibboleth.StaticPKIXTrustEngine" abstract="true"
        class="org.opensaml.spring.trust.StaticPKIXFactoryBean" />
        
    <bean id="shibboleth.X509TrustManager" abstract="true"
        class="org.opensaml.security.trust.impl.TrustEngineX509TrustManager" />

    <!-- Used in views to calculate CSP hashes and nonces. -->
    
    <bean id="shibboleth.CSPDigester" class="net.shibboleth.shared.codec.StringDigester"
        c:algorithm="SHA256" c:format="BASE64" />

    <bean id="shibboleth.CSPNonce" destroy-method=""
            class="net.shibboleth.shared.security.IdentifierGenerationStrategy" factory-method="getInstance">
        <constructor-arg>
            <util:constant
                static-field="net.shibboleth.shared.security.IdentifierGenerationStrategy.ProviderType.SECURE" />
        </constructor-arg>
        <constructor-arg>
            <bean class="net.shibboleth.shared.security.RandomIdentifierParameterSpec"
                    c:identifierSize="16">
                <constructor-arg name="source">
                    <null/>
                </constructor-arg>
                <constructor-arg name="identifierEncoder">
                    <null/>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
    

    <!-- Beans for user-visible metadata configuration usage. -->

    <!-- Secondary indexing support -->
    <bean id="shibboleth.Metadata.Index.SAMLArtifact" lazy-init="true"
        class="org.opensaml.saml.metadata.resolver.index.impl.SAMLArtifactMetadataIndex" />

    <!-- Note: By default this indexes all endpoints under all roles.
         To index more selectively by role and endpoint name/type, use the predicate below. -->
    <bean id="shibboleth.Metadata.Index.Endpoint" lazy-init="true"
        class="org.opensaml.saml.metadata.resolver.index.impl.EndpointMetadataIndex" />

    <!-- By default this predicate selects no endpoints to index.
         So this would typically be used only as a parent bean, with an added ctor param.
         This would be a Map<QName, Set<QName>> (RoleDescriptor element/type -> Endpoint(s) element/type),
         either as a single ctor param or as a named ctor param c:indexableTypes. -->
    <bean id="shibboleth.Metadata.Index.Endpoint.Predicate.ByRoleAndEndpoint" lazy-init="true"
        class="org.opensaml.saml.metadata.resolver.index.impl.EndpointMetadataIndex.DefaultEndpointSelectionPredicate" />

    <!-- Parent bean for users to configure a custom ID store rather than a data source only. -->
    <bean id="shibboleth.JDBCPairwiseIdStore" abstract="true"
        class="net.shibboleth.idp.attribute.impl.JDBCPairwiseIdStore" />

</beans>
