<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">
    
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />

    <bean class="net.shibboleth.shared.spring.config.IdentifiableBeanPostProcessor" />
    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />

    <bean id="shibboleth.authn.RemoteUser.checkHeaders" parent="shibboleth.CommaDelimStringArray"
        c:_0="#{'%{idp.authn.RemoteUserInternal.checkHeaders:}'.trim()}" />

    <bean id="shibboleth.authn.RemoteUser.checkAttributes" parent="shibboleth.CommaDelimStringArray"
        c:_0="#{'%{idp.authn.RemoteUserInternal.checkAttributes:}'.trim()}" />

    <import resource="conditional:%{idp.home}/conf/authn/remoteuser-internal-authn-config.xml" />

    <bean class="net.shibboleth.shared.spring.config.DeprecatedBeanDetector" c:_1="remoteuser-internal-authn-config.xml">
        <constructor-arg index="0">
            <map>
                <entry key="shibboleth.authn.RemoteUser.whitelistedUsernames">
                    <null/>
                </entry>
                <entry key="shibboleth.authn.RemoteUser.blacklistedUsernames">
                    <null/>
                </entry>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="ExtractRemoteUser" class="net.shibboleth.idp.authn.impl.ExtractRemoteUser" scope="prototype"
        p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier"
        p:checkRemoteUser="#{getObject('shibboleth.authn.RemoteUser.checkRemoteUser') ?: %{idp.authn.RemoteUserInternal.checkRemoteUser:true}}"
        p:checkHeaders="#{getObject('shibboleth.authn.RemoteUser.checkHeaders')}"
        p:checkAttributes="#{getObject('shibboleth.authn.RemoteUser.checkAttributes')}"
        p:lowercase="#{getObject('shibboleth.authn.RemoteUser.Lowercase') ?: %{idp.authn.RemoteUserInternal.lowercase:false}}"
        p:uppercase="#{getObject('shibboleth.authn.RemoteUser.Uppercase') ?: %{idp.authn.RemoteUserInternal.uppercase:false}}"
        p:trim="#{getObject('shibboleth.authn.RemoteUser.Trim') ?: %{idp.authn.RemoteUserInternal.trim:true}}"
        p:transforms="#{getObject('shibboleth.authn.RemoteUser.Transforms')}" />

    <bean id="PropertyDrivenAllowList" parent="shibboleth.CommaDelimStringArray"
        c:_0="#{'%{idp.authn.RemoteUserInternal.allowedUsernames:}'.trim()}" />
        
    <bean id="PropertyDrivenDenyList" parent="shibboleth.CommaDelimStringArray"
        c:_0="#{'%{idp.authn.RemoteUserInternal.deniedUsernames:}'.trim()}" />
        
    <bean id="ValidateRemoteUser" class="net.shibboleth.idp.authn.impl.ValidateRemoteUser" scope="prototype"
        p:matchExpression="#{getObject('shibboleth.authn.RemoteUser.matchExpression') ?: '%{idp.authn.RemoteUserInternal.matchExpression:}'}"
        p:allowedUsernames="#{getObject('shibboleth.authn.RemoteUser.allowedUsernames') ?: (getObject('shibboleth.authn.RemoteUser.whitelistedUsernames') ?: getObject('PropertyDrivenAllowList'))}"
        p:deniedUsernames="#{getObject('shibboleth.authn.RemoteUser.deniedUsernames') ?: (getObject('shibboleth.authn.RemoteUser.blacklistedUsernames') ?: getObject('PropertyDrivenDenyList'))}"
        p:addDefaultPrincipals="#{getObject('shibboleth.authn.RemoteUser.addDefaultPrincipals') ?: %{idp.authn.RemoteUserInternal.addDefaultPrincipals:true}}"
        p:classifiedMessages="#{getObject('shibboleth.authn.RemoteUser.ClassifiedMessageMap')}"
        p:resultCachingPredicate="#{getObject('shibboleth.authn.RemoteUser.resultCachingPredicate')}"
        p:populateAuditContextAction="#{%{idp.authn.RemoteUserInternal.audit.enabled:%{idp.authn.audit.enabled:false}} ? getObject('shibboleth.authn.RemoteUserInternal.PopulateAuditContext') : null}"
        p:writeAuditLogAction="#{%{idp.authn.RemoteUserInternal.audit.enabled:%{idp.authn.audit.enabled:false}} ? getObject('WriteAuditLog') : null}" />

    <bean id="PopulateSubjectCanonicalizationContext"
        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />

    <!-- Audit logging beans. -->

    <util:map id="shibboleth.authn.AuditFormattingMap">
        <entry key="#{'%{idp.authn.RemoteUserInternal.audit.category:Shibboleth-Audit.RemoteUserInternal}'.trim()}"
            value="#{'%{idp.authn.RemoteUserInternal.audit.format:%a|%T|%SP|%s|%AF|%CV|%u|%AR|%UA}'.trim()}" />
    </util:map>

    <bean id="shibboleth.authn.RemoteUserInternal.DefaultAuditExtractors" parent="shibboleth.authn.DefaultAuditExtractors" lazy-init="true"
            class="org.springframework.beans.factory.config.MapFactoryBean">
        <property name="sourceMap">
             <map merge="true">
                <entry>
                    <key>
                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
                    </key>
                    <bean class="net.shibboleth.idp.authn.audit.impl.AttemptedUsernameAuditExtractor" />
                </entry>
             </map>
        </property>
    </bean>
    
    <bean id="shibboleth.authn.RemoteUserInternal.PopulateAuditContext" parent="shibboleth.authn.AbstractPopulateAuditContext" lazy-init="true"
        p:fieldExtractors="#{getObject('shibboleth.authn.RemoteUserInternal.AuditExtractors') ?: getObject('shibboleth.authn.RemoteUserInternal.DefaultAuditExtractors')}"
        p:clearAuditContext="true" />

</beans>
