<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize"
    default-destroy-method="destroy">

    <bean class="net.shibboleth.shared.spring.config.IdentifiableBeanPostProcessor" />
    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />

    <alias alias="UserPromptCondition" name="%{idp.logout.promptUser:shibboleth.Conditions.FALSE}" />

    <bean id="InitializeProfileRequestContext"
        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
        p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier"
        p:profileId="http://shibboleth.net/ns/profiles/logout"
        p:loggingId="%{idp.service.logging.logout:Logout}"
        p:browserProfile="true"
        p:captureQueryParameters="%{idp.logout.preserveQuery:false}" />

    <bean id="FlowStartPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.FlowStartAuditExtractors') ?: getObject('shibboleth.DefaultFlowStartAuditExtractors')}" />

    <bean id="PopulateMetricContext"
        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
        p:counterName="net.shibboleth.idp.profiles.logout"
        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />

    <bean id="PopulateUserAgentContext"
          class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
          p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier" />

    <bean id="PopulateClientStorageLoadContext"
        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />

    <bean id="ProcessLogout"
        class="net.shibboleth.idp.session.impl.ProcessLogout" scope="prototype"
        p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier"
        p:sessionResolver-ref="shibboleth.SessionManager"
        p:addressLookupStrategy="#{getObject('shibboleth.SessionAddressLookupStrategy')}" />
    
    <bean id="DestroySessions"
        class="net.shibboleth.idp.session.impl.DestroySessions" scope="prototype"
        p:sessionManager-ref="shibboleth.SessionManager" />
    
    <bean id="PopulateClientStorageSaveContext"
        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
    
    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.LogoutAuditExtractors') ?: getObject('shibboleth.DefaultLogoutAuditExtractors')}" />
        
    <bean id="PopulateMultiRPContextFromLogoutContext"
        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
        p:activationCondition="%{idp.logout.elaboration:false}"
        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver" />
        
    <bean id="SetRPUIInformation"
            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
            p:activationCondition="%{idp.logout.elaboration:false}"
            p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier">
        <property name="fallbackLanguages">
            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
        </property>
        <property name="metadataContextLookupStrategy">
            <bean parent="shibboleth.Functions.Compose">
                <constructor-arg name="g">
                    <bean parent="shibboleth.Functions.Compose">
                        <constructor-arg name="g">
                            <ref bean="shibboleth.ChildLookup.SAMLMetadataContext" />
                        </constructor-arg>
                        <constructor-arg name="f">
                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
                        </constructor-arg>
                    </bean>
                </constructor-arg>
                <constructor-arg name="f">
                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
                </constructor-arg>
            </bean>
        </property>
        <property name="RPUIContextCreateStrategy">
            <bean parent="shibboleth.Functions.Compose">
                <constructor-arg name="g">
                    <bean parent="shibboleth.Functions.Compose">
                        <constructor-arg name="g">
                            <ref bean="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext" />
                        </constructor-arg>
                        <constructor-arg name="f">
                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
                        </constructor-arg>
                    </bean>
                </constructor-arg>
                <constructor-arg name="f">
                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
        <property name="eventContextLookupStrategy">
            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
        </property>
    </bean>
    
    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
        p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier"
        p:formattingMap-ref="shibboleth.AuditFormattingMap" />

    <bean id="ErrorViewPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />
    
    <bean id="MapEventToView"
        class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
        p:defaultView-ref="shibboleth.DefaultErrorView"
        p:eventMap="#{getObject('shibboleth.EventViewMap')}" />

    <bean id="SaveLogoutContext"
          class="net.shibboleth.idp.session.impl.SaveLogoutContext" />

</beans>
