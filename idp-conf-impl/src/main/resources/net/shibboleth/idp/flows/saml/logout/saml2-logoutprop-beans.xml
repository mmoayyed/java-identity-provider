<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-init-method="initialize"
       default-destroy-method="destroy">

    <import resource="../saml-abstract-beans.xml" />

    <util:constant id="shibboleth.EndpointType"
        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />

    <util:constant id="shibboleth.MetadataLookup.Protocol"
        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />

    <util:constant id="shibboleth.MetadataLookup.Role"
        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />

    <bean id="shibboleth.OutgoingBindingsLookupStrategy"
            class="net.shibboleth.shared.spring.expression.SpringExpressionFunction"
            c:expression="#custom[#input.isBrowserProfile() ? 'full' : 'soap']">
        <property name="customObject">
            <map>
                <entry key="full">
                    <ref bean="shibboleth.OutgoingSAML2SLOBindings" />
                </entry>
                <entry key="soap">
                    <ref bean="shibboleth.OutgoingSOAPBindings" />
                </entry>
            </map>
        </property>
    </bean>    
    
    <bean id="PrepareInboundMessageContext"
        class="net.shibboleth.idp.saml.session.impl.PrepareInboundMessageContext" scope="prototype" />

    <bean id="InitializeMessageChannelSecurityContext"
        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
        p:confidentialityActive="false" p:integrityActive="false" />

    <bean id="PopulateLogoutBindingAndEndpointContexts"
        class="net.shibboleth.idp.saml.profile.impl.PopulateBindingAndEndpointContexts" scope="prototype"
        p:endpointResolver-ref="shibboleth.EndpointResolver"
        p:endpointType="#{getObject('shibboleth.EndpointType')}"
        p:bindingDescriptorsLookupStrategy-ref="shibboleth.OutgoingBindingsLookupStrategy"
        p:artifactImpliesSecureChannel="%{idp.artifact.secureChannel:true}"
        p:bestMatchCriterionLookupStrategy-ref="BestMatchCriterionLookupStrategy" />
    <bean id="BestMatchCriterionLookupStrategy" class="net.shibboleth.idp.saml.session.impl.BestMatchLocationLookupStrategy" />

    <bean id="AddLogoutRequest" class="net.shibboleth.idp.saml.session.impl.AddLogoutRequest" scope="prototype"
            p:overwriteExisting="true"
            p:issuerLookupStrategy-ref="shibboleth.IssuerLookup.Simple">
        <property name="identifierGeneratorLookupStrategy">
            <bean class="net.shibboleth.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
        </property>
    </bean>

    <!-- This is a little iffy, but the post-assertion extractors include the fields we want here. -->
    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />

    <!-- Default formats not to encrypt. -->
    <util:set id="DefaultPlaintextNameIDFormats">
        <util:constant static-field="org.opensaml.saml.saml2.core.NameIDType.ENTITY" />
    </util:set>

    <bean id="EncryptNameIDs"
            class="org.opensaml.saml.saml2.profile.impl.EncryptNameIDs" scope="prototype"
            p:excludedFormats="#{getObject('shibboleth.PlaintextNameIDFormats') ?: getObject('DefaultPlaintextNameIDFormats')}"
            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
        <property name="encryptionContextLookupStrategy">
            <bean parent="shibboleth.Functions.Compose"
                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
        </property>
    </bean>

    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />

    <bean id="PopulateOutboundInterceptContext"
            class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext" scope="prototype"
            p:availableFlows="#{@'shibboleth.ProfileInterceptorFlowDescriptorManager'.getComponents()}"
            p:loggingLabel="outbound">
        <property name="activeFlowsLookupStrategy">
            <bean class="net.shibboleth.idp.profile.config.navigate.OutboundFlowsLookupFunction" />
        </property>
    </bean>

    <bean id="PostDecodePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.PostDecodeAuditExtractors') ?: getObject('shibboleth.DefaultPostDecodeAuditExtractors')}" />
    
    <bean id="shibboleth.PreEncodeMessageHandler"
            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
        <property name="handlers">
            <list>
                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
                <bean class="org.opensaml.messaging.handler.impl.FunctionMessageHandler" scope="prototype">
                    <property name="functionLookupStrategy">
                        <bean class="net.shibboleth.saml.profile.config.navigate.messaging.MessageHandlerLookupFunction" />
                    </property>
                </bean>
                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
                        p:signErrorResponses="%{idp.errors.signed:true}">
                    <property name="activationCondition">
                        <bean parent="shibboleth.Conditions.NOT">
                            <constructor-arg>
                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
                            </constructor-arg>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    
    <bean id="PopulateRequestSignatureSigningParameters"
            class="org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters" scope="prototype"
            p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
            p:signatureSigningParametersResolver-ref="shibboleth.SignatureSigningParametersResolver"
            p:noResultIsError="true">
        <property name="activationCondition">
            <bean class="net.shibboleth.saml.profile.config.logic.SignRequestsPredicate" />
        </property>
    </bean>
    
    <bean id="SOAPLogoutRequest"
        class="net.shibboleth.idp.saml.saml2.profile.impl.SOAPLogoutRequest" scope="prototype"
        p:SOAPClient-ref="shibboleth.SOAPClient.SAML"
        p:SOAPPipelineName="SAML2.Logout" />

</beans>