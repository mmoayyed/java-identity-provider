<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">
       
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />

    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />

    <!-- Default strategy function to obtain the external path. -->
    <bean id="shibboleth.authn.RemoteUser.externalAuthnPathStrategy" parent="shibboleth.Functions.Constant"
        c:target="#{getObject('shibboleth.authn.RemoteUser.externalAuthnPath') ?: '%{idp.authn.RemoteUser.externalAuthnPath:contextRelative:/Authn/RemoteUser}'.trim()}" />
    
    <!-- Default message map. -->
    <util:map id="shibboleth.authn.RemoteUser.ClassifiedMessageMap">
        <entry key="RequestUnsupported">
            <list>
                <value>RequestUnsupported</value>
            </list>
        </entry>
        <entry key="NoCredentials">
            <list>
                <value>NoCredentials</value>
            </list>
        </entry>
        <entry key="InvalidCredentials">
            <list>
                <value>InvalidCredentials</value>
            </list>
        </entry>
    </util:map>
    
    <import resource="conditional:%{idp.home}/conf/authn/remoteuser-authn-config.xml" />

    <bean id="DefaultCleanupHook" class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication.UsernameCleanupHook" />

    <bean id="ValidateExternalAuthentication"
        class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
        p:metricName="net.shibboleth.idp.authn.remoteuser"
        p:matchExpression="#{getObject('shibboleth.authn.RemoteUser.matchExpression') ?: '%{idp.authn.RemoteUser.matchExpression:}'}"
        p:addDefaultPrincipals="#{getObject('shibboleth.authn.RemoteUser.addDefaultPrincipals') ?: %{idp.authn.RemoteUser.addDefaultPrincipals:true}}"
        p:classifiedMessages="#{getObject('shibboleth.authn.RemoteUser.ClassifiedMessageMap')}"
        p:resultCachingPredicate="#{getObject('shibboleth.authn.RemoteUser.resultCachingPredicate')}"
        p:cleanupHook-ref="DefaultCleanupHook"
        p:populateAuditContextAction="#{%{idp.authn.RemoteUser.audit.enabled:%{idp.authn.audit.enabled:false}} ? getObject('shibboleth.authn.RemoteUser.PopulateAuditContext') : null}"
        p:writeAuditLogAction="#{%{idp.authn.RemoteUser.audit.enabled:%{idp.authn.audit.enabled:false}} ? getObject('WriteAuditLog') : null}" />

    <bean id="PopulateSubjectCanonicalizationContext"
        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />

    <!-- Audit logging beans. -->

    <util:map id="shibboleth.authn.AuditFormattingMap">
        <entry key="#{'%{idp.authn.RemoteUser.audit.category:Shibboleth-Audit.RemoteUser}'.trim()}"
            value="#{'%{idp.authn.RemoteUser.audit.format:%a|%T|%SP|%s|%AF|%CV|%u|%AR|%UA}'.trim()}" />
    </util:map>

    <bean id="shibboleth.authn.RemoteUser.DefaultAuditExtractors" parent="shibboleth.authn.DefaultAuditExtractors" lazy-init="true"
            class="org.springframework.beans.factory.config.MapFactoryBean">
        <property name="sourceMap">
             <map merge="true">
                <entry>
                    <key>
                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
                    </key>
                    <bean class="net.shibboleth.idp.authn.audit.impl.AttemptedUsernameAuditExtractor" />
                </entry>
             </map>
        </property>
    </bean>
    
    <bean id="shibboleth.authn.RemoteUser.PopulateAuditContext" parent="shibboleth.authn.AbstractPopulateAuditContext" lazy-init="true"
        p:fieldExtractors="#{getObject('shibboleth.authn.RemoteUser.AuditExtractors') ?: getObject('shibboleth.authn.RemoteUser.DefaultAuditExtractors')}"
        p:clearAuditContext="true" />

</beans>
