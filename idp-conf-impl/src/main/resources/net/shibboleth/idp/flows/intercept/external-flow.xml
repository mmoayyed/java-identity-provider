<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="intercept.abstract">

    <!-- Rudimentary impediment to direct execution of subflow. -->
    <input name="calledAsSubflow" type="boolean" required="true" />

    <!-- This is an interceptor flow handled outside the webflow engine. -->
    
    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.profile.interceptor.ExternalInterceptor).getExternalRedirect((flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.intercept.externalPathStrategy') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.intercept.externalPathStrategy') : flowRequestContext.getActiveFlow().getApplicationContext().getBean('DefaultExternalPathStrategy')).apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
        <attribute name="csrf_excluded" value="true" type="boolean"/>
        <on-render>
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).addSubcontext(new net.shibboleth.idp.profile.context.ExternalInterceptorContext(new net.shibboleth.idp.profile.interceptor.impl.ExternalInterceptorImpl()), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
        </on-render>
        <transition to="#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getSubcontext(T(net.shibboleth.idp.profile.context.ExternalInterceptorContext)).getEventId()}" />
    </view-state>
    
    <bean-import resource="external-beans.xml" />

</flow>
