<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

	default-init-method="initialize" default-destroy-method="destroy">

    <bean id="Shibboleth.C14N.SAML2Transient"
            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
        <property name="decoder">
            <bean class="net.shibboleth.idp.saml.nameid.impl.TransientNameIDDecoder"
                p:idStore-ref="shibboleth.StorageService" />
        </property>
    </bean>

    <bean id="Shibboleth.C14N.SAML2CryptoTransient"
            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
        <property name="decoder">
            <bean class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientNameIDDecoder"
                p:dataSealer-ref="shibboleth.DataSealer" />
        </property>
    </bean>

    <bean id="Shibboleth.C14N.SAML2Persistent"
            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
        <property name="decoder">
            <bean class="net.shibboleth.idp.saml.nameid.impl.StoredPersistentIdDecoder"
                p:persistentIdStore="#{getObject('%{idp.persistentId.store:undefined}'.trim())}"
                p:dataSource="#{getObject('%{idp.persistentId.dataSource:undefined}'.trim())}" />
        </property>
    </bean>

    <bean id="TransformingNameIDDecoder" lazy-init="true"
        class="net.shibboleth.idp.saml.nameid.impl.TransformingNameIDDecoder"
        p:lowercase="%{idp.c14n.saml.lowercase:false}"
        p:uppercase="%{idp.c14n.saml.uppercase:false}"
        p:transforms-ref="shibboleth.NameTransforms" />

    <bean id="Shibboleth.C14N.SAML2Transform"
        class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype"
        p:decoder="#{getObject('shibboleth.SAML2Transform.NameIDDecoder') ?: getObject('TransformingNameIDDecoder')}" />

    <bean id="ProxyTransformingNameIDDecoder" lazy-init="true"
        class="net.shibboleth.idp.saml.nameid.impl.TransformingNameIDDecoder"
        p:lowercase="%{idp.c14n.saml.proxy.lowercase:false}"
        p:uppercase="%{idp.c14n.saml.proxy.uppercase:false}"
        p:transforms-ref="shibboleth.ProxyNameTransforms" />

    <bean id="Shibboleth.C14N.SAML2ProxyTransform"
        class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype"
        p:decoder="#{getObject('shibboleth.SAML2ProxyTransform.NameIDDecoder') ?: getObject('ProxyTransformingNameIDDecoder')}" />

    <bean id="Shibboleth.C14N.SAML1Transient"
            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
        <property name="decoder">
            <bean class="net.shibboleth.idp.saml.nameid.impl.TransientNameIdentifierDecoder"
                p:idStore-ref="shibboleth.StorageService" />
        </property>
    </bean>

    <bean id="Shibboleth.C14N.SAML1CryptoTransient"
            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
        <property name="decoder">
            <bean class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientNameIdentifierDecoder"
                p:dataSealer-ref="shibboleth.DataSealer" />
        </property>
    </bean>

    <bean id="TransformingNameIdentifierDecoder" lazy-init="true"
        class="net.shibboleth.idp.saml.nameid.impl.TransformingNameIdentifierDecoder"
        p:lowercase="%{idp.c14n.saml.lowercase:false}"
        p:uppercase="%{idp.c14n.saml.uppercase:false}"
        p:transforms-ref="shibboleth.NameTransforms" />

    <bean id="Shibboleth.C14N.SAML1Transform"
        class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype"
        p:decoder="#{getObject('shibboleth.SAML1Transform.NameIdentifierDecoder') ?: getObject('TransformingNameIdentifierDecoder')}" />

</beans>
