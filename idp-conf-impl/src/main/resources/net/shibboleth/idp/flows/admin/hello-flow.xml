<flow xmlns="http://www.springframework.org/schema/webflow"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
    parent="admin.abstract">

    <!-- Start action. -->
        
    <action-state id="InitializeProfileRequestContext">
        <evaluate expression="InitializeProfileRequestContext" />
        <evaluate expression="FlowStartPopulateAuditContext" />
        <evaluate expression="'proceed'" />
        
        <!-- Branch to determine if authentication is required. -->
        <transition on="proceed" to="DoAdminPreamble" />
    </action-state>

    <!-- Resume actual flow processing. -->

    <action-state id="DoProfileWork">
        <evaluate expression="CheckAccess" />
        <evaluate expression="ScriptedAction" />
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="end" />
    </action-state>

    <!-- Terminus -->

    <end-state id="end" view="admin/hello">
        <on-entry>
            <evaluate expression="WriteAuditLog" />
            <evaluate expression="environment" result="requestScope.environment" />
            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.SubjectContext))" result="requestScope.subjectContext" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.profile.context.RelyingPartyContext)).getSubcontext(T(net.shibboleth.idp.attribute.context.AttributeContext))" result="requestScope.attributeContext" />
            <evaluate expression="T(net.shibboleth.shared.codec.HTMLEncoder)" result="requestScope.encoder" />
            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CSPDigester')" result="requestScope.cspDigester" />
            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CSPNonce')" result="requestScope.cspNonce" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
        </on-entry>
    </end-state>
    
    <bean-import resource="hello-beans.xml" />

</flow>
