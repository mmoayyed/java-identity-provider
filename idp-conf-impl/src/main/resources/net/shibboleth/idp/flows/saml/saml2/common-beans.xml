<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize"
    default-destroy-method="destroy">
    
    <util:constant id="shibboleth.MetadataLookup.Protocol"
        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />

    <util:constant id="shibboleth.MetadataLookup.Role"
        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
    
    <bean id="AddResponseShell" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
            p:overwriteExisting="true"
            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
            p:messageType="#{T(org.opensaml.saml.saml2.core.Response).DEFAULT_ELEMENT_NAME}">
        <property name="identifierGeneratorLookupStrategy">
            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
        </property>
    </bean>

    <bean id="AddAuthnStatementToAssertion"
            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAuthnStatementToAssertion" scope="prototype"
            p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier"
            p:addressLookupStrategy="#{getObject('shibboleth.SubjectLocalityAddressStrategy')}">
        <property name="identifierGeneratorLookupStrategy">
            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
        </property>
        <property name="classRefLookupStrategy">
            <bean class="net.shibboleth.idp.authn.impl.DefaultPrincipalDeterminationStrategy"
                    c:type="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal">
                <constructor-arg name="principal">
                    <bean class="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal"
                        c:classRef="#{T(org.opensaml.saml.saml2.core.AuthnContext).UNSPECIFIED_AUTHN_CTX}" />
                </constructor-arg>
            </bean>
        </property>
        <property name="activationCondition">
            <bean parent="shibboleth.Conditions.NOT">
                <constructor-arg>
                    <bean parent="shibboleth.Conditions.Expression">
                        <constructor-arg>
                            <value>
                                #profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/liberty/ssos')
                            </value>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="AddAttributeStatementToAssertion"
            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAttributeStatementToAssertion" scope="prototype"
            p:transcoderRegistry-ref="shibboleth.AttributeRegistryService">
        <property name="activationCondition">
            <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
        </property>
        <property name="identifierGeneratorLookupStrategy">
            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
        </property>
    </bean>

    <bean id="InitializeOutboundMessageContextForError"
            class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContextForError" scope="prototype"
            p:outboundBinding-ref="shibboleth.Binding.SAML2SOAP" />

    <bean id="AddStatusToResponse"
            class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse" scope="prototype"
            p:statusMessage="An error occurred.">
        <property name="detailedErrorsCondition">
            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
        </property>
        <property name="statusCodes">
            <list>
                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.RESPONDER" />
            </list>
        </property>
        <property name="statusCodesLookupStrategy">
            <bean class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse.StatusCodeMappingFunction"
                    c:mappings-ref="shibboleth.SAML2StatusMappings" />
        </property>
        <property name="statusMessageLookupStrategy">
            <bean class="net.shibboleth.idp.profile.context.navigate.SpringStatusMessageLookupFunction" />
        </property>
    </bean>

    <!-- Default formats not to encrypt. -->
    <util:set id="DefaultPlaintextNameIDFormats">
        <util:constant static-field="org.opensaml.saml.saml2.core.NameIDType.ENTITY" />
    </util:set>

    <bean id="EncryptNameIDs"
            class="org.opensaml.saml.saml2.profile.impl.EncryptNameIDs" scope="prototype"
            p:excludedFormats="#{getObject('shibboleth.PlaintextNameIDFormats') ?: getObject('DefaultPlaintextNameIDFormats')}"
            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
        <property name="encryptionContextLookupStrategy">
            <bean parent="shibboleth.Functions.Compose"
                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
        </property>
    </bean>

    <bean id="EncryptAttributes"
            class="org.opensaml.saml.saml2.profile.impl.EncryptAttributes" scope="prototype"
            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
        <property name="encryptionContextLookupStrategy">
            <bean parent="shibboleth.Functions.Compose"
                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
        </property>
    </bean>
    
    <bean id="EncryptAssertions"
            class="org.opensaml.saml.saml2.profile.impl.EncryptAssertions" scope="prototype"
            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
        <property name="encryptionContextLookupStrategy">
            <bean parent="shibboleth.Functions.Compose"
                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
        </property>
    </bean>

</beans>
