<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize"
    default-destroy-method="destroy">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
        
    <import resource="common-beans.xml" />

    <alias alias="UserPromptCondition" name="%{idp.logout.promptUser:shibboleth.Conditions.FALSE}" />

    <util:constant id="shibboleth.EndpointType"
        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />

    <bean id="InitializeProfileRequestContext"
        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration).PROFILE_ID}"
        p:loggingId="%{idp.service.logging.saml2slo:Logout}"
        p:browserProfile="true" />

    <bean id="PreProcessLogoutMessage"
        class="net.shibboleth.idp.saml.saml2.profile.impl.PreProcessLogoutMessage" scope="prototype"
        p:assumeAsynchronousLogout="%{idp.logout.assumeAsync:false}" />

    <bean id="InitializeMessageChannelSecurityContext"
        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
        p:confidentialityActive="false" p:integrityActive="false" />

    <bean id="shibboleth.OutgoingBindingsLookupStrategy" parent="shibboleth.Functions.Constant"
        c:_0-ref="shibboleth.OutgoingSAML2SLOFrontBindings" />    

    <bean id="ProcessLogoutRequest"
        class="net.shibboleth.idp.saml.saml2.profile.impl.ProcessLogoutRequest" scope="prototype"
        p:sessionResolver-ref="shibboleth.SessionManager" />
    
    <bean id="DestroySessions"
        class="net.shibboleth.idp.session.impl.DestroySessions" scope="prototype"
        p:sessionManager-ref="shibboleth.SessionManager" />
    
    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.LogoutRequestAuditExtractors') ?: getObject('shibboleth.DefaultLogoutRequestAuditExtractors')}" />

    <bean id="SetIssuerRPUIInformation"
            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
            p:activationCondition="%{idp.logout.elaboration:false}"
            p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier">
        <property name="fallbackLanguages">
            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
        </property>
        <property name="RPUIContextCreateStrategy">
            <bean parent="shibboleth.Functions.Compose">
                <constructor-arg name="g">
                    <ref bean="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext" />
                </constructor-arg>
                <constructor-arg name="f">
                    <ref bean="shibboleth.ChildLookup.RelyingParty" />
                </constructor-arg>
            </bean>
        </property>
    </bean>
        
    <bean id="PopulateMultiRPContextFromLogoutContext"
        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
        p:activationCondition="%{idp.logout.elaboration:false}"
        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver" />

    <bean id="SetRPUIInformation"
            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
            p:activationCondition="%{idp.logout.elaboration:false}"
            p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier">
        <property name="fallbackLanguages">
            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
        </property>
        <property name="metadataContextLookupStrategy">
            <bean parent="shibboleth.Functions.Compose">
                <constructor-arg name="g">
                    <bean parent="shibboleth.Functions.Compose">
                        <constructor-arg name="g">
                            <ref bean="shibboleth.ChildLookup.SAMLMetadataContext" />
                        </constructor-arg>
                        <constructor-arg name="f">
                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
                        </constructor-arg>
                    </bean>
                </constructor-arg>
                <constructor-arg name="f">
                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
                </constructor-arg>
            </bean>
        </property>
        <property name="RPUIContextCreateStrategy">
            <bean parent="shibboleth.Functions.Compose">
                <constructor-arg name="g">
                    <bean parent="shibboleth.Functions.Compose">
                        <constructor-arg name="g">
                            <ref bean="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext" />
                        </constructor-arg>
                        <constructor-arg name="f">
                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
                        </constructor-arg>
                    </bean>
                </constructor-arg>
                <constructor-arg name="f">
                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
                </constructor-arg>
            </bean>
        </property>
    </bean>
    
    <bean id="AddLogoutResponse" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
            p:overwriteExisting="true"
            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
            p:messageType="#{T(org.opensaml.saml.saml2.core.LogoutResponse).DEFAULT_ELEMENT_NAME}">
        <property name="identifierGeneratorLookupStrategy">
            <bean class="net.shibboleth.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
        </property>
    </bean>

    <bean id="AddLogoutStatusToResponse"
            class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse" scope="prototype">
        <property name="detailedErrorsCondition">
            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
        </property>
        <property name="statusCodes">
            <list>
                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.SUCCESS" />
            </list>
        </property>
        <property name="statusCodesLookupStrategy">
            <bean class="net.shibboleth.idp.session.impl.LogoutStatusStrategyFunction" />
        </property>
    </bean>

    <bean id="shibboleth.PreEncodeMessageHandler"
            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
        <property name="handlers">
            <list>
                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
                        p:signErrorResponses="%{idp.errors.signed:true}">
                    <property name="activationCondition">
                        <bean parent="shibboleth.Conditions.NOT">
                            <constructor-arg>
                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
                            </constructor-arg>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="SaveLogoutContext"
          class="net.shibboleth.idp.session.impl.SaveLogoutContext" />

</beans>
