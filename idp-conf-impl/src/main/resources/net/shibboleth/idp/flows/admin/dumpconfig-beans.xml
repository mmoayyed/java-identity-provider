<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize"
    default-destroy-method="destroy">

    <!-- Profile ID for flow. -->
    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
        c:_0="http://shibboleth.net/ns/profiles/dumpconfig" />

    <!-- Profile counter name. -->
    <bean id="shibboleth.metrics.ProfileCounter" class="java.lang.String" c:_0="net.shibboleth.idp.profiles.dumpconfig" />

    <!-- Default operation/resource suppliers for access checks. -->
    
    <bean id="shibboleth.AdminOperationLookupStrategy" parent="shibboleth.Functions.Constant" c:target="read" />
        
    <bean id="shibboleth.AdminResourceLookupStrategy" parent="shibboleth.Functions.Constant" c:target="dumpconfig" />
        
    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
        <constructor-arg>
            <bean class="%{idp.dumpconfig.decoderClass:net.shibboleth.idp.admin.impl.DumpConfigRequestDecoder}" scope="prototype"
                p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier" />    
        </constructor-arg>
    </bean>
    
    <bean id="PostDecodePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext">
        <property name="fieldExtractors">
            <map>
                <entry>
                    <key>
                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.PROTOCOL"/>
                    </key>
                    <bean parent="shibboleth.Functions.Compose">
                        <constructor-arg name="g">
                            <bean parent="shibboleth.Functions.Compose">
                                <constructor-arg name="g">
                                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLProtocolContextProtocolFunction" />
                                </constructor-arg>
                                <constructor-arg name="f">
                                    <ref bean="shibboleth.ChildLookup.SAMLProtocolContext" />
                                </constructor-arg>
                            </bean>
                        </constructor-arg>
                        <constructor-arg name="f">
                            <ref bean="shibboleth.MessageContextLookup.Inbound" />
                        </constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    
    <bean id="SAMLMetadataLookup"
            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
            c:executionDirection="INBOUND">
        <constructor-arg name="messageHandler">
            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype">
                <property name="roleDescriptorResolver">
                    <bean class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
                        c:mdResolver-ref="shibboleth.MetadataResolver" />
                </property>
            </bean>
        </constructor-arg>
    </bean>
    
    <bean id="InitializeRelyingPartyContexFromSAMLPeer"
        class="net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer" scope="prototype" />

    <bean id="SelectRelyingPartyConfiguration"
        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration" scope="prototype"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyResolverService" />
    
    <bean id="SelectProfileConfiguration"
        class="net.shibboleth.idp.profile.impl.SelectProfileConfiguration" scope="prototype" />
    
    <bean id="PostLookupPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.PostLookupAuditExtractors') ?: getObject('shibboleth.DefaultPostLookupAuditExtractors')}" />
        
    <bean id="OutputConfig" class="net.shibboleth.idp.admin.impl.OutputConfig" scope="prototype"
        p:httpServletResponseSupplier-ref="shibboleth.HttpServletResponseSupplier" />

    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />

</beans>
